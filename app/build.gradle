plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs'
    id 'com.google.gms.google-services'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    signingConfigs {
        release {
            storeFile file("keystore.jks")
            storePassword 'itisBB15092019'
            keyAlias 'papakarloKey'
            keyPassword 'Itispapakarlo08062004'
        }
    }

    defaultConfig {
        applicationId "com.bunbeauty.fooddeleveryadmin"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.2.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "Admin_${variant.name}_${versionName}.apk"
            }
        }

        debug {
            debuggable true
            minifyEnabled false
            buildConfigField 'String', 'FB_LINK', '"https://test-fooddelivery.firebaseio.com/"'
        }

        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'FB_LINK', '"https://fooddelivery-ce2ef-default-rtdb.firebaseio.com/"'
            signingConfig signingConfigs.release
        }
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }
    sourceSets {
        main {
            assets {
                srcDirs 'src\\main\\assets'
            }
        }
    }
    flavorDimensions "api"

    productFlavors {
        prod {
            buildConfigField 'String', 'APP_ID', '"papakarlo"'
        }
    }
}

dependencies {
    implementation project(":data")
    implementation project(":domain")
    implementation project(":common")

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "androidx.core:core-ktx:$rootProject.coreKtxVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appcompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintlayoutVersion"

    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationVersion"
    androidTestImplementation "androidx.navigation:navigation-testing:$rootProject.navigationVersion"

    //Firebase
    implementation platform("com.google.firebase:firebase-bom:$rootProject.firebaseVersion")
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'

    //Tests
    testImplementation "io.mockk:mockk:$rootProject.mockVersion"
    androidTestImplementation "androidx.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.rulesVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.testjunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$rootProject.mockitoVersion"

    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.extensionsVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.viewmodelVersion"
    implementation "androidx.activity:activity-ktx:$rootProject.activityVersion"
    implementation "androidx.fragment:fragment-ktx:$rootProject.fragmentVersion"

    //Dagger 2
    implementation "com.google.dagger:dagger:$rootProject.dagger2Version"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.dagger2Version"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger2Version"

    //Hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$hiltVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltLifecycleVersion"
    kapt "androidx.hilt:hilt-compiler:$hiltCompilerVersion"

    //Ð¡oroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.corountinesVersion"

    //Design
    implementation "com.google.android.material:material:$rootProject.materialDesignVersion"
    implementation "androidx.recyclerview:recyclerview:$rootProject.recyclerViewVersion"

    //Database
    implementation "androidx.room:room-runtime:$rootProject.roomDatabaseVersion"

    //Picasso
    implementation "com.squareup.picasso:picasso:$rootProject.picassoVersion"

    //Joda time
    implementation "joda-time:joda-time:$rootProject.jodaVersion"

    //FastAdapter
    implementation "com.mikepenz:fastadapter:$rootProject.fastAdapterVersion"
    implementation "com.mikepenz:fastadapter-extensions-binding:$rootProject.fastAdapterVersion"
}